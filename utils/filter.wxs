var DateFr = {

  getDate: function(time, splitStr) {

    if (!time) return '';

    var date = getDate(time);
    var M = date.getMonth() + 1;
    var y = date.getFullYear();
    var d = date.getDate();

    if (M < 10) M = "0" + M;
    if (d < 10) d = "0" + d;

    if (splitStr)
      return y + splitStr + M + splitStr + d;
    else
      return {
        y: y,
        M: M,
        d: d
      };
  },
  getDistance: function(distance) {
    var num = distance / 1000;
    return num ? num.toFixed(1) : '';
  },
  getSupportedLanguage: function(language) {
    return language.reduce(function(pre, curr) {
      return pre + '/' + curr;
    })
  },
  formatTime: function(timestamp) {
    var date = getDate(timestamp);
    var year = date.getFullYear();
    var month = date.getMonth() + 1
    var day = date.getDate()
    var hour = date.getHours()
    var minute = date.getMinutes()
    var second = date.getSeconds()

    return [year, month, day].map(formatNumber).join('-') + ' ' + [hour, minute, second].map(formatNumber).join(':')
  },
  secondToDate: function(result) {
    var m = Math.floor((result / 60 % 60)) < 10 ? '0' + Math.floor((result / 60 % 60)) : Math.floor((result / 60 % 60));
    var s = Math.floor((result % 60)) < 10 ? '0' + Math.floor((result % 60)) : Math.floor((result % 60));
    return m + ":" + s;
  },
  getSureDateText: function(type) {
    if (type === 1) {
      return '立刻确认'
    } else if (type === 2) {
      return '工作日3小时内确认'
    } else if (type === 3) {
      return '工作日1天内确认'
    } else if (type === 4) {
      return '工作日3天内确认'
    }
  },
  getScheduledTime: function (arr) {
    return arr.reduce(function (pre, next) {
      return pre + '、' + next;
    });
  },
  getOrderPrice: function(price, coupon) {
    var result = '';
    if (coupon.type === 0) {
      result = price * (coupon.discount / 100);
    } else if (coupon.type === 1) {
      result = price - coupon.reducePrice
    } else if (coupon.type === 2) {
      result = price - coupon.reducePrice >= 0 ? price - coupon.reducePrice : 0
    } else {
      result = price
    }
    if (result) {
      if (price <= 1) {
        result = 0.01;
      } else {
        if (Math.floor(result) / 100 === result / 100) {
          result = result / 100;
        } else {
          result = Math.floor(result) / 100 + 0.01;
        }
      }
    }
    return result;
  },
  getDiscountPrice: function(price, coupon) {
    var result = 0;
    if (coupon.type === 0) {
      result = price - price * (coupon.discount / 100)
    } else if (coupon.type === 1 || coupon.type === 2) {
      result = coupon.reducePrice
    }
    if (price >= result) {
      if (price <= 1) {
        result = 0.00;
      } else {
        if (Math.floor(result) / 100 === result / 100) {
          result = result / 100;
        } else {
          result = Math.floor(result) / 100;
        }
      }
    } else {
      result = price / 100;
    }
    return result;
  },
  getChineseDate: function(str) {
    str = '' + str;
    var year = str.substring(0, 4) + '年';
    var month = str.substring(4, 6) + '月';
    var day = str.substring(6, 8) + '日';
    return year + month + day;
  },
  getOrderDate: function(time) {
    if (!time) return '';

    var date = getDate(time);
    var M = date.getMonth() + 1;
    var y = date.getFullYear();
    var d = date.getDate();

    if (M < 10) M = "0" + M;
    if (d < 10) d = "0" + d;

    return y + '年' + M + '月' + d + '日';
  },
  getOrderTime: function (time) {
    if (!time) return '';

    var date = getDate(time);
    var h = date.getHours();
    var m = date.getMinutes();
    if (h < 10) h = "0" + h;
    if (m < 10) m = '0' + m;
    return h + ':' + m;
  },
  getOrderStatus: function (status, item) {
    var str = '';
    switch (status) {
      case -1:
        str = '待付款';
        break;
      case 0:
        str = '已取消';
        break;
      case 1:
        str = '待确认';
        break;
      case 2:
        str = '待发货';
        break;
      case 3:
        str = (item.preOrder || item.providerOrderInfo) ? '待就餐' : '待使用';
        break;
      case 4:
        str = '待点评';
        break;
      case 5:
        str = '已完成';
        break;
      case 6:
        str = '退款中';
        break;
      case 7:
        str = '已退款';
        break;
      case 8:
        str = '退款驳回';
        break;
      case 10:
        str = '确认驳回';
        break;
      case 11:
        str = '使用中';
        break;
      case 99:
        str = '超时无效';
        break;
    };
    return str;
  },
  getOrderStatusSubText: function(status) {
    var str = '';
    switch (status) {
      case -1:
        str = '去付款';
        break;
      case 0:
        str = '再次购买';
        break;
      case 1:
        str = '等待确认中...';
        break;
      case 2:
        str = '再次购买';
        break;
      case 3:
        str = '再次购买';
        break;
      case 4:
        str = '再次购买';
        break;
      case 5:
        str = '再次购买';
        break;
      case 6:
        str = '退款确认中...';
        break;
      case 7:
        str = '退款成功';
        break;
      case 8:
        str = '退款驳回';
        break;
      case 10:
        str = '确认驳回';
        break;
      case 11:
        str = '使用中';
        break;
      case 99:
        str = '超时无效';
        break;
    };
    return str;
  },
  getExtFieldText: function(str) {
    var obj = JSON.parse(str);
    var result = ''
    if (obj['babyChairCount']) {
      result += '安全座椅:' + obj['babyChairCount']
    }
    return result;
  },
  getPayTypeText: function(type) {
    var str = '';
    if (type === 1) str = '支付宝';
    if (type === 2 || type === 4 || type === 5) str = '微信';
    if (type === 3) str = 'apple';
    return str;
  },
  getLinePendingDateText: function (lineAt) {
    var diff = (getDate().getTime() - lineAt) / 1000;
    var d = Math.floor((diff / (3600 * 24)));
    var h = Math.floor((diff % (3600 * 24) / 3600));
    var m = Math.floor((diff % 3600 / 60));
    var s = Math.floor((diff % 60)) < 10 ? '0' + Math.floor((diff % 60)) : Math.floor((diff % 60));
    return d > 0 ? d + '天' + h + '时' + m + '分' : h + '时' + m + '分钟';
  },
  getLineStatusText: function (status) {
    var str = '';
    if (status === 1 || status === 0) str = '排队中';
    if (status === 2) str = '已就餐';
    if (status === 3) str = '已就餐';
    if (status === 4) str = '商户下线';
    return str;
  },
  getFoodOrderTotal: function (dots) {
    var total = dots.map(function (item) {
      return item.foodOrderBatchDetail.foodNumber;
    }).reduce(function (pre, next) {
      return pre + next;
    });
    return total;
  },
  getNowFoodOrderNum: function (arr, fid) {
    if (arr.length) {
      var result = arr.filter(function (item) {
        return item.foodId === fid;
      }).reduce(function (pre, curr) {
        return pre + curr.foodNumber;
      }, 0);
      return result;
    } else {
      return 0;
    }
  },
  getFoodOrderBatchTotalPrice: function (dots) {
    var price = dots.reduce(function (pre, next) {
      return pre + (next.foodOrderBatchDetail.foodPrice * next.foodOrderBatchDetail.foodNumber)
    }, 0);
    var result = price / 100 >= 1 ? parseInt(price / 100) : (price / 100).toFixed(2);
    return result;
  },
  getOrderPageUseDateText: function (type) {
    var str = '';
    if (type === 11 || type === 12 || type === 34) {
      str = '出行'
    } else if (type === 31 || type === 32 || type === 35) {
      str = '领取'
    } else if (type === 33) {
      str = '接机'
    } else if (type === 38) {
      str = '送机'
    } else if (type === 36 || type === 37 || type === 43 || type === 41 || type === 42) {
      str = '使用'
    }
    return str + '日期'
  },
  getReceiverEnglishNameText: function (enName) {
    if (enName) {
      return enName.split('|')[1] + ' ' + enName.split('|')[0];
    } else {
      return '';
    }
  },
  // 获取当前菜品分类选择的份数
  getCheckedFoodMenuCount: function (arr, menuId) {
    if (arr.length && menuId) {
      var num = arr.filter(function (item) {
        return item.menuId === menuId;
      }).reduce(function (pre, curr) {
        return pre + curr.foodNumber || 0
      }, 0);
      return num;
    } else {
      return 0;
    }
  },
  // 获取当前食物是否已经被选择
  getNowFoodIsCheck: function (arr, fid) {
    if (arr && fid) {
      var result = arr.filter(function (item) {
        return item.foodId === fid;
      });
      return result.length ? true : false;
    } else {
      return false;
    }
  },
  // 获取被选中的食物的份数和数量
  getCheckedFoodNumAndTotal: function (arr, fid) {
    var food = arr.filter(function (item) {
      return item.foodId === fid;
    });
    var total = food[0].subFoodItems.reduce(function (pre, curr) {
      return pre + curr.foodNumber;
    }, 0);
    return '已选' + food[0].foodNumber + '份 菜品' + total;
  },
  // 获取分类下的食物被选中的数量
  getGroupSelectedFoodNumber: function (gid, subFoodItems) {
    var foodList = subFoodItems.filter(function (item) {
      return item.foodGroupId === gid;
    });
    if (foodList.length) {
      return foodList.reduce(function (cur, next) {
        return cur + next.foodNumber;
      }, 0);
    } else {
      return 0;
    }
  },
  // 判断当前食物是否在可点时段
  getNowFoodSelectable: function (type, beginTime, endTime) {
    if (type === 0) {
      return true;
    }
    if ((!beginTime && !endTime) || (beginTime === '00:00' && endTime === '00:00')) {
      return true;
    } else {
      var n = getDate();
      var b = getDate();
      var e = getDate();
      b.setHours(beginTime.split(':')[0]);
      b.setMinutes(beginTime.split(':')[1]);
      e.setHours(endTime.split(':')[0]);
      e.setMinutes(endTime.split(':')[1]);
      if (n.getTime() - b.getTime() > 0 && n.getTime() - e.getTime() < 0) {
        return true;
      } else {
        return false;
      }
    }
  },
  // 获取当前食物规格是否已经被选择
  gewNowFoodSpecSelected: function (arr, id) {
    var index = arr.indexOf(id);
    return index !== -1 ? "active": "";
  },
  // 获取规格文本内容
  gewNowFoodSpecText: function (foodSpcs, spcItemId, type) {
    var arr = foodSpcs.reduce(function (pre, curr) {
      return pre.concat(curr.items);
    }, []);
    if (type === 'list') spcItemId.reverse();
    var spc = spcItemId.map(function (item) {
      var index = arr.filter(function (obj) {
        return obj.id === item;
      });
      return index[0];
    }).filter(function (item) {
      return item;
    }).map(function (item) {
      return item.name;
    }).join(' ');
    return spc;
  },
  // 获取食物规格选择完整之后的价格
  getNowFoodSpecCompletePrice: function (prices, md5) {
    var priceObj = prices.filter(function (item) {
      return item.md5 === md5;
    });
    return priceObj[0].price
  },
  // 数组筛选不为空的值
  getArrayDataHasValue: function (arr) {
    return arr.filter(function(item) {
      return item
    });
  },
  // 判断是否显示选择必点菜提示
  mandatoryTipsShow: function (nowMenu, menuList, menuItem, foodItems) {
    var mandatoryArray = menuList.filter(function (item) {
      return item.type === 1;
    });
    var mandatoryId = mandatoryArray.length ? mandatoryArray[0].id : '';
    if (nowMenu.id !== mandatoryId) {
      var foodList = mandatoryArray.map(function (item) {
        return menuItem[item.id].map(function (mt) {
          return mt.foods;
        }).reduce(function (p, c) {
          return p.concat(c);
        }, [])
      }).reduce(function (p, c) {
        return p.concat(c);
      }, []);
      var obj = {};
      var mandatoryFood = foodItems.filter(function (item) {
        var index = foodList.filter(function (food) {
          return food.id === item.foodId;
        });
        return index.length && item.foodNumber;
      }).reduce(function (cur, next) {
        obj[next.foodId] ? "" : obj[next.foodId] = true && cur.push(next);
        return cur;
      }, []);
      if (mandatoryFood.length === foodList.length) {
        return false;
      } else {
        return true;
      }
    } else {
      return false;
    }
  },
  // 获取当前订单的总价格
  getNowFoodOrderTotalPrice: function (orderItems, goods, num) {
    if (num || orderItems.length) {
      var foodPrice = orderItems.reduce(function (cur, next) {
        return cur + next.totalPrice
      }, 0);
      var teePrice = goods.goodsBase.teeFee * num;
      var total = (foodPrice + teePrice) / 100;
      if (total.toString().indexOf('.') !== -1) {
        total =  parseInt(total) + 1;
      }
      return total;
    } else {
      return 0;
    }
  },
  // 获取当前订单的服务费
  getNowFoodOrderServiceCharge: function (orderItems, goods, num) {
    if (num || orderItems.length) {
      var foodPrice = orderItems.reduce(function (cur, next) {
        return cur + next.totalPrice
      }, 0);
      var teePrice = goods.goodsBase.teeFee * num;
      var total = (foodPrice + teePrice) / 100;
      if (total.toString().indexOf('.') !== -1) {
        total = parseInt(total) + 1;
      }
      var serviceCharge = total / 10;
      if (serviceCharge.toString().indexOf('.') !== -1) {
        serviceCharge = parseInt(serviceCharge) + 1;
      }
      return serviceCharge;
    } else {
      return 0;
    }
  },
  // 获取点菜订单的食品数量
  getNowFoodOrderFoodNumber: function (orderItems) {
    if (orderItems.length) {
      var num = orderItems.reduce(function (cur, next) {
        return cur + next.foodNumber;
      }, 0)
      return num;
    } else {
      return 0;
    }
  }
}

function formatNumber(n) {
  n = n.toString()
  return n[1] ? n : '0' + n
}

module.exports = {
  getDate: DateFr.getDate,
  getDistance: DateFr.getDistance,
  getSupportedLanguage: DateFr.getSupportedLanguage,
  formatTime: DateFr.formatTime,
  getSureDateText: DateFr.getSureDateText,
  getOrderPrice: DateFr.getOrderPrice,
  getDiscountPrice: DateFr.getDiscountPrice,
  getChineseDate: DateFr.getChineseDate,
  getOrderStatus: DateFr.getOrderStatus,
  getOrderStatusSubText: DateFr.getOrderStatusSubText,
  getOrderDate: DateFr.getOrderDate,
  getOrderTime: DateFr.getOrderTime,
  getExtFieldText: DateFr.getExtFieldText,
  getPayTypeText: DateFr.getPayTypeText,
  secondToDate: DateFr.secondToDate,
  getLinePendingDateText: DateFr.getLinePendingDateText, 
  getLineStatusText: DateFr.getLineStatusText,
  getFoodOrderTotal: DateFr.getFoodOrderTotal,
  getNowFoodOrderNum: DateFr.getNowFoodOrderNum,
  getFoodOrderBatchTotalPrice: DateFr.getFoodOrderBatchTotalPrice,
  getOrderPageUseDateText: DateFr.getOrderPageUseDateText,
  getReceiverEnglishNameText: DateFr.getReceiverEnglishNameText,
  getScheduledTime: DateFr.getScheduledTime,
  getCheckedFoodMenuCount: DateFr.getCheckedFoodMenuCount,
  getNowFoodIsCheck: DateFr.getNowFoodIsCheck,
  getCheckedFoodNumAndTotal: DateFr.getCheckedFoodNumAndTotal,
  getNowFoodSelectable: DateFr.getNowFoodSelectable,
  gewNowFoodSpecSelected: DateFr.gewNowFoodSpecSelected,
  gewNowFoodSpecText: DateFr.gewNowFoodSpecText,
  getNowFoodSpecCompletePrice: DateFr.getNowFoodSpecCompletePrice,
  getArrayDataHasValue: DateFr.getArrayDataHasValue,
  mandatoryTipsShow: DateFr.mandatoryTipsShow,
  getNowFoodOrderTotalPrice: DateFr.getNowFoodOrderTotalPrice,
  getNowFoodOrderServiceCharge: DateFr.getNowFoodOrderServiceCharge,
  getNowFoodOrderFoodNumber: DateFr.getNowFoodOrderFoodNumber,
  getGroupSelectedFoodNumber: DateFr.getGroupSelectedFoodNumber
}